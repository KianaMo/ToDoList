{"ast":null,"code":"var _jsxFileName = \"C:\\\\appFrontEnd\\\\apps\\\\ToDoList\\\\ToDoList\\\\app4\\\\src\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-material.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [desc, setDesc] = React.useState('');\n  const [date, setDate] = React.useState('');\n  const [priority, setPriority] = React.useState('');\n  const [todos, setTodos] = React.useState([]);\n  const gridRef = useRef();\n  const inputChanged = event => {\n    setDesc(event.target.value);\n  };\n  const inputChanged2 = event => {\n    setDate(event.target.value);\n  };\n  const inputChanged3 = event => {\n    setPriority(event.target.value);\n  };\n  const addTodo = event => {\n    event.preventDefault();\n    setTodos([...todos, {\n      desc,\n      date,\n      priority\n    }]);\n    setDesc('');\n    setDate('');\n    setPriority('');\n  };\n  const columns = [{\n    headerName: 'Date',\n    field: 'date',\n    sortable: true\n  }, {\n    headerName: 'Description',\n    field: 'desc',\n    sortable: true\n  }, {\n    headerName: 'Priority',\n    field: 'priority',\n    sortable: true,\n    cellStyle: params => params.value === \"High\" ? {\n      color: 'red'\n    } : {\n      color: 'black'\n    }\n  }];\n  const deleteTodo = () => {\n    setTodos(todos.filter((todo, index) => index != gridRef.current.getSelectedNodes()[0].id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"groove\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Todos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this), \"Description: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputChanged,\n        value: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 30\n      }, this), \"Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputChanged2,\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this), \"Priority: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputChanged3,\n        value: priority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTodo,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        height: '700px',\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        ref: gridRef,\n        onGridReady: params => gridRef.current = params.api,\n        rowSelection: \"single\",\n        columnDefs: columns,\n        rowData: todos,\n        floatingFilter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"PJ0vqkQQyed/WyuIYvWbBl8uDbI=\");\n_c = TodoList;\n;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useRef","render","AgGridReact","TodoList","desc","setDesc","date","setDate","priority","setPriority","todos","setTodos","gridRef","inputChanged","event","target","value","inputChanged2","inputChanged3","addTodo","preventDefault","columns","headerName","field","sortable","cellStyle","params","color","deleteTodo","filter","todo","index","current","getSelectedNodes","id","height","width","margin","api"],"sources":["C:/appFrontEnd/apps/ToDoList/ToDoList/app4/src/TodoList.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AgGridReact } from 'ag-grid-react';\r\n\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-material.css';\r\nfunction TodoList() {\r\n    const [desc, setDesc] = React.useState('');\r\n    const [date, setDate] = React.useState('');\r\n    const [priority, setPriority] = React.useState('');\r\n    const [todos, setTodos] = React.useState([]);\r\n    const gridRef = useRef();\r\n\r\n\r\n\r\n\r\n    const inputChanged = (event) => {\r\n        setDesc(event.target.value);\r\n\r\n    }\r\n    const inputChanged2 = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n    const inputChanged3 = (event) => {\r\n        setPriority(event.target.value);\r\n    }\r\n\r\n    const addTodo = (event) => {\r\n        event.preventDefault();\r\n        setTodos([...todos, { desc, date, priority }])\r\n\r\n        setDesc('');\r\n        setDate('');\r\n        setPriority('');\r\n\r\n    }\r\n    const columns = [\r\n        { headerName: 'Date', field: 'date', sortable: true },\r\n        { headerName: 'Description', field: 'desc', sortable: true },\r\n        { headerName: 'Priority', field: 'priority', sortable: true, cellStyle: params => params.value === \"High\" ? { color: 'red' } : { color: 'black' } }\r\n    ]\r\n\r\n    const deleteTodo = () => {\r\n        setTodos(todos.filter((todo, index) =>\r\n            index != gridRef.current.getSelectedNodes()[0].id))\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"groove\"> <h1>My Todos:</h1>\r\n                Description: <input type=\"text\" onChange={inputChanged} value={desc} />\r\n                Date: <input type=\"text\" onChange={inputChanged2} value={date} />\r\n                Priority: <input type=\"text\" onChange={inputChanged3} value={priority} />\r\n\r\n                <button onClick={addTodo}>Add</button>\r\n                <button onClick={deleteTodo}>Delete</button></p>\r\n\r\n            <div className=\"ag-theme-material\" style={{ height: '700px', width: '80%', margin: 'auto' }}>\r\n                <AgGridReact\r\n                    ref={gridRef}\r\n                    onGridReady={params => gridRef.current = params.api}\r\n                    rowSelection=\"single\"\r\n                    columnDefs={columns}\r\n                    rowData={todos}\r\n                    floatingFilter={true}\r\n\r\n                >\r\n\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default TodoList;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}